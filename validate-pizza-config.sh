#!/bin/bash

# ===============================================
# üß™ Script de Validation Configuration Pizza 
# ===============================================

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üß™ Validation de la configuration Pizza/Stripe${NC}"
echo "================================================="

# Test de l'API contact
echo -e "\n${BLUE}1. Test API Contact${NC}"
if curl -s -f http://localhost:3000/api/contact > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API Contact accessible${NC}"
    
    # Test d√©taill√© de l'API
    response=$(curl -s http://localhost:3000/api/contact)
    if echo "$response" | grep -q "API Contact GetYourSite"; then
        echo -e "${GREEN}‚úÖ API Contact r√©pond correctement${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  API Contact accessible mais r√©ponse inattendue${NC}"
    fi
else
    echo -e "${RED}‚ùå API Contact non accessible${NC}"
fi

# Test de l'API paiement
echo -e "\n${BLUE}2. Test API Paiements${NC}"
if curl -s -f -X POST -H "Content-Type: application/json" \
   -d '{"package_id":"margherita"}' http://localhost:3000/api/payments/checkout > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API Paiements accessible${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  API Paiements accessible mais n√©cessite configuration Stripe${NC}"
fi

# Test configuration Stripe
echo -e "\n${BLUE}3. V√©rification Configuration Stripe${NC}"
if [ -f ".env" ]; then
    if grep -q "STRIPE_API_KEY=" .env && ! grep -q "STRIPE_API_KEY=sk_test_emergent" .env; then
        echo -e "${GREEN}‚úÖ Cl√© secr√®te Stripe configur√©e${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Cl√© secr√®te Stripe utilise la valeur par d√©faut${NC}"
    fi
    
    if grep -q "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=" .env; then
        echo -e "${GREEN}‚úÖ Cl√© publique Stripe configur√©e${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Cl√© publique Stripe non configur√©e${NC}"
    fi
    
    if grep -q "STRIPE_WEBHOOK_SECRET=" .env; then
        echo -e "${GREEN}‚úÖ Secret webhook Stripe configur√©${NC}"
    else
        echo -e "${YELLOW}‚ÑπÔ∏è  Secret webhook Stripe non configur√© (optionnel)${NC}"
    fi
else
    echo -e "${RED}‚ùå Fichier .env non trouv√©${NC}"
fi

# Test des pages pizza
echo -e "\n${BLUE}4. Test Pages Pizza${NC}"
if curl -s -f http://localhost:3000/pizza > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Page pizza principale accessible${NC}"
else
    echo -e "${RED}‚ùå Page pizza non accessible${NC}"
fi

if curl -s -f http://localhost:3000/pizza/menu > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Page menu pizza accessible${NC}"
else
    echo -e "${RED}‚ùå Page menu pizza non accessible${NC}"
fi

# Test MongoDB (si configur√©)
echo -e "\n${BLUE}5. V√©rification MongoDB${NC}"
if command -v mongo &> /dev/null; then
    echo -e "${GREEN}‚úÖ MongoDB install√©${NC}"
elif command -v mongod &> /dev/null; then
    echo -e "${GREEN}‚úÖ MongoDB daemon disponible${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  MongoDB non d√©tect√© - les transactions de paiement peuvent ne pas fonctionner${NC}"
fi

# R√©sum√© final
echo -e "\n${BLUE}üìã R√©sum√© de la validation${NC}"
echo "================================"
echo -e "${GREEN}‚úÖ √âl√©ments fonctionnels d√©tect√©s${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  √âl√©ments n√©cessitant attention${NC}"
echo -e "${RED}‚ùå √âl√©ments d√©faillants${NC}"

echo -e "\n${BLUE}üí° Pour une configuration compl√®te:${NC}"
echo "1. Configurez vos vraies cl√©s Stripe dans .env"
echo "2. Configurez le webhook Stripe: https://votre-domaine/api/webhook/stripe"
echo "3. Testez les paiements en mode test avec de vraies cl√©s"

echo -e "\n${BLUE}üîó URLs importantes:${NC}"
echo "‚Ä¢ Site pizza: https://pizza.getyoursite.fr (ou /pizza)"
echo "‚Ä¢ API contact: /api/contact"
echo "‚Ä¢ API paiement: /api/payments/checkout"
echo "‚Ä¢ Webhook Stripe: /api/webhook/stripe"