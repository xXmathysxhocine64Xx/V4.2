#!/bin/bash

# ===============================================
# üîß Fix Complet - Toutes erreurs Nginx (VERSION CORRIG√âE)
# ===============================================

set -e

# Couleurs CORRIG√âES
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}üîß Correction compl√®te de toutes les erreurs Nginx${NC}"
echo "================================================"

# V√©rification des privil√®ges root
if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}‚ùå Ce script doit √™tre ex√©cut√© en tant que root${NC}"
   echo "Utilisez: sudo ./fix-nginx-condition-complete.sh"
   exit 1
fi

# Afficher l'erreur actuelle
echo -e "${BLUE}üîç Analyse des erreurs actuelles...${NC}"
echo -e "${YELLOW}Erreurs d√©tect√©es:${NC}"
nginx -t 2>&1 | head -10 || true

echo -e "\n${BLUE}üîß Application des corrections...${NC}"

# 1. Corriger les zones de rate limiting
echo -e "${BLUE}1Ô∏è‚É£ Correction des zones de rate limiting...${NC}"
if ! grep -q "contact_limit" /etc/nginx/nginx.conf; then
    echo -e "${YELLOW}   Ajout des zones manquantes...${NC}"
    sed -i '/http {/a\\t# Rate limiting zones\n\tlimit_req_zone $binary_remote_addr zone=contact_limit:10m rate=5r/m;\n\tlimit_req_zone $binary_remote_addr zone=general_limit:10m rate=20r/m;' /etc/nginx/nginx.conf
    echo -e "${GREEN}   ‚úÖ Zones ajout√©es${NC}"
else
    echo -e "${GREEN}   ‚úÖ Zones d√©j√† pr√©sentes${NC}"
fi

# 2. Corriger toutes les configurations de sites
echo -e "${BLUE}2Ô∏è‚É£ Correction des configurations de sites...${NC}"

# Sites √† v√©rifier
SITES=("/etc/nginx/sites-enabled/getyoursite.fr" "/etc/nginx/sites-available/getyoursite.fr" "/etc/nginx/sites-enabled/pizza.getyoursite.fr" "/etc/nginx/sites-available/pizza.getyoursite.fr" "/etc/nginx/sites-enabled/mairie.getyoursite.fr" "/etc/nginx/sites-available/mairie.getyoursite.fr")

for site in "${SITES[@]}"; do
    if [[ -f "$site" ]]; then
        echo -e "${YELLOW}   Correction: $site${NC}"
        
        # Cr√©er une sauvegarde
        cp "$site" "$site.backup.$(date +%Y%m%d_%H%M%S)"
        
        # Corrections multiples
        # 1. Condition if avec guillemets
        sed -i 's/if ($host = pizza\.getyoursite\.fr)/if ($host = "pizza.getyoursite.fr")/' "$site"
        
        # 2. Corriger les variables non-escap√©es si n√©cessaires
        sed -i 's/\$http_upgrade/\\$http_upgrade/g' "$site"
        sed -i 's/\$host/\\$host/g' "$site"
        sed -i 's/\$remote_addr/\\$remote_addr/g' "$site"
        sed -i 's/\$proxy_add_x_forwarded_for/\\$proxy_add_x_forwarded_for/g' "$site"
        sed -i 's/\$scheme/\\$scheme/g' "$site"
        sed -i 's/\$server_name/\\$server_name/g' "$site"
        
        # Remettre les bonnes variables (celles qui doivent √™tre escap√©es dans nginx)
        sed -i 's/\\\\$/\\$/g' "$site"
        
        echo -e "${GREEN}   ‚úÖ Corrig√©${NC}"
    fi
done

# 3. Supprimer les sites en double/probl√©matiques
echo -e "${BLUE}3Ô∏è‚É£ Nettoyage des configurations en double...${NC}"
if [[ -f "/etc/nginx/sites-enabled/pizza.getyoursite.fr" ]]; then
    echo -e "${YELLOW}   Suppression du site pizza s√©par√© (g√©r√© par site principal)${NC}"
    rm -f /etc/nginx/sites-enabled/pizza.getyoursite.fr
    rm -f /etc/nginx/sites-available/pizza.getyoursite.fr
    echo -e "${GREEN}   ‚úÖ Site pizza s√©par√© supprim√©${NC}"
fi

# 4. V√©rifier les permissions
echo -e "${BLUE}4Ô∏è‚É£ V√©rification des permissions...${NC}"
chown -R root:root /etc/nginx/sites-available/
chown -R root:root /etc/nginx/sites-enabled/
chmod 644 /etc/nginx/sites-available/*
echo -e "${GREEN}   ‚úÖ Permissions corrig√©es${NC}"

# 5. Test de la configuration
echo -e "\n${BLUE}üß™ Test final de la configuration Nginx...${NC}"
if nginx -t; then
    echo -e "${GREEN}‚úÖ Configuration Nginx enti√®rement corrig√©e!${NC}"
    
    # Red√©marrer nginx
    echo -e "${BLUE}üîÑ Red√©marrage de Nginx...${NC}"
    systemctl reload nginx
    echo -e "${GREEN}‚úÖ Nginx red√©marr√© avec succ√®s${NC}"
    
    echo -e "\n${GREEN}üéâ SUCC√àS COMPLET!${NC}"
    echo -e "${BLUE}Toutes les erreurs Nginx ont √©t√© corrig√©es${NC}"
    
    # Afficher les sites actifs
    echo -e "\n${BLUE}üìã Sites Nginx actifs:${NC}"
    ls -la /etc/nginx/sites-enabled/ | grep -v "total\|default" || echo "Aucun site actif trouv√©"
    
    # Statut des services
    echo -e "\n${BLUE}üìä Statut des services:${NC}"
    systemctl is-active nginx && echo -e "${GREEN}‚úÖ Nginx: Actif${NC}" || echo -e "${RED}‚ùå Nginx: Inactif${NC}"
    
    # Test de connectivit√©
    echo -e "\n${BLUE}üîç Test de connectivit√© locale...${NC}"
    if curl -s http://localhost > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Site accessible localement${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Site non accessible - v√©rifiez PM2${NC}"
        pm2 status 2>/dev/null || echo -e "${RED}PM2 non d√©marr√©${NC}"
    fi
    
else
    echo -e "${RED}‚ùå Erreurs persistantes dans la configuration${NC}"
    echo -e "${YELLOW}D√©tail des erreurs restantes:${NC}"
    nginx -t
    
    echo -e "\n${BLUE}üîß Actions sugg√©r√©es:${NC}"
    echo "1. V√©rifiez manuellement les fichiers de configuration"
    echo "2. Consultez les logs: tail -f /var/log/nginx/error.log"
    echo "3. Relancez avec le script de d√©ploiement corrig√©"
    
    exit 1
fi